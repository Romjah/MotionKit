import { Meta } from '@storybook/blocks';

<Meta title="Introduction" />

# MotionKit

Une collection de micro-animations r√©utilisables pour am√©liorer l'UX des applications web.

## üöÄ Installation

```bash
npm install motion-kit
# ou
yarn add motion-kit
```

## üì¶ Fonctionnalit√©s

- Collection d'animations modulaires et configurables
- D√©mos interactives pour chaque animation
- Documentation d'utilisation
- Bundle optimis√© pour la performance
- Int√©gration avec frameworks populaires

## üéØ Utilisation

MotionKit fournit plusieurs types d'animations :

### Transitions

Les animations de transition permettent de cr√©er des effets fluides entre les √©tats :

```typescript
import { Transition } from 'motion-kit';

const element = document.querySelector('.my-element');
const transition = new Transition(element);

// Fade in
transition.fadeIn();

// Slide in from left
transition.slideIn('left');
```

### Notifications

Les animations de notification permettent d'afficher des messages avec diff√©rents types :

```typescript
import { Notification } from 'motion-kit';

const element = document.createElement('div');
const notification = new Notification(element, {
  type: 'success',
  position: 'top',
});

notification.show('Operation successful!');
```

### Loading

Les animations de chargement fournissent un retour visuel pendant les op√©rations :

```typescript
import { Loading } from 'motion-kit';

const element = document.querySelector('.loading-element');
const loading = new Loading(element, {
  size: 'medium',
  color: '#3498db',
});

loading.start();
```

### States

Les animations d'√©tat permettent de refl√©ter visuellement diff√©rents √©tats :

```typescript
import { States } from 'motion-kit';

const element = document.querySelector('.state-element');
const states = new States(element);

states.setState('success');
```

### Hover

Les effets de survol ajoutent de l'interactivit√© aux √©l√©ments :

```typescript
import { Hover } from 'motion-kit';

const element = document.querySelector('.hover-element');
const hover = Hover.lift(element);
```

## üé® Personnalisation

Toutes les animations peuvent √™tre personnalis√©es avec des options :

```typescript
const options = {
  duration: 500, // dur√©e en millisecondes
  easing: 'ease-in-out', // fonction d'acc√©l√©ration
  delay: 100, // d√©lai avant l'animation
};
```

## üõ†Ô∏è D√©veloppement

```bash
# Installation des d√©pendances
npm install

# D√©veloppement
npm run dev

# Build
npm run build

# Tests
npm test

# Storybook
npm run storybook
```

## üìö Documentation

Explorez les diff√©rentes animations dans la barre lat√©rale pour voir des exemples interactifs et la documentation d√©taill√©e de chaque composant. 